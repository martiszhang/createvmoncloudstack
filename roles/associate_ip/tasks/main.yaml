---
- name: print list a list of vm which want public ip
  set_fact: list_vm_need_public_ip="{{ list_vm_need_public_ip | default([]) + [ item ] }}"
  loop: "{{ groups['sdn'] }}" 
  when: hostvars[item]['need_public_ip'] == 1

- name:  print  list_vm_need_public_ip
  debug: msg="{{ list_vm_need_public_ip }}"

- name: gather instance facts
  cs_instance_facts:
    name: "{{ vpc_name }}-{{ item }}" 
  register: vm_publicip_info
  loop: "{{ list_vm_need_public_ip }}"

- name: print vm_publicip_info  result
  debug: msg="{{ vm_publicip_info.results }}"

- name: set variable list_vm_had_public_ip to contain now vm and public ip info  
#  debug: msg="{{item.name}}=={{ item.public_ip | default(0) }}"
  set_fact: list_vm_had_public_ip="{{ list_vm_had_public_ip | default([]) + [{'name':item.name,'publicip':item.public_ip|default("0")}] }}"
  loop: "{{  vm_publicip_info.results }}"

- name: print variable list_vm_had_public_ip 
  debug: msg="{{ list_vm_had_public_ip }}"

- name: select publicip = 0 empty vm
#  debug: msg="{{  item.name }}"
#  when: item.publicip == "0"
  set_fact: list_nopublicvm="{{ list_nopublicvm | default([]) }} + ["{{ item.name }}"]"
  loop: "{{ list_vm_had_public_ip }}"
  when: item.publicip == "0"

- name: debug
  debug: msg="{{ list_nopublicvm }}"
  when: list_nopublicvm is defined and list_nopublicvm | length != 0

- name: Associate an IP address
  cs_ip_address:
    vpc: "{{ vpc_name }}"
    network: "{{ vpc_subnet_name |first | join('') }}"
  loop: "{{ range(list_nopublicvm |length)|list  }}"
  register: ip_address
  when: list_nopublicvm is defined and list_nopublicvm | length != 0

- name: debug ip_address
##  debug: msg="{{ ip_address.results | selectattr('ip_address')| map(attribute='ip_address')|list }}"
  set_fact: list_pip="{{ ip_address.results | selectattr('ip_address')| map(attribute='ip_address')|list }}"
  when: list_nopublicvm is defined and list_nopublicvm | length != 0


- name: debug list_pip
  debug: msg="{{ list_pip }}"
  when: list_nopublicvm is defined and list_nopublicvm | length != 0


- name: bind public ip to hosts
  cs_staticnat:
    ip_address: "{{ item.0 }}"
    vm: "{{ item.1 }}"
    vpc: "{{ vpc_name }}"
    network: "{{ vpc_subnet_name | first| join('') }}"
  loop: "{{ list_pip | zip(list_nopublicvm) | list }}"
  when: list_nopublicvm is defined and list_nopublicvm | length != 0 

- name: go to associate_extra_public_ips.yaml ips 
  include_tasks: associate_extra_public_ips.yaml
  loop: "{{ groups['sdn'] }}"
  when: (hostvars[item]['vm_extra_pub_ips'] is defined) and( hostvars[item]['vm_extra_pub_ips'] |length != 0 )
